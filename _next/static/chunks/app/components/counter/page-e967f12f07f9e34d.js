(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[536],{7667:(e,n,t)=>{Promise.resolve().then(t.bind(t,34397))},30171:(e,n,t)=>{"use strict";t.d(n,{A:()=>c});var s=t(95155),i=t(12115),a=t(68739),l=t(17704),r=t(5917),d=t(75426);function c(e){let{children:n,code:t,title:c,description:o}=e,[x,m]=(0,i.useState)(!1),u=async()=>{await navigator.clipboard.writeText(t),m(!0),setTimeout(()=>m(!1),2e3)};return(0,s.jsxs)("div",{className:"border border-gray-200 rounded-lg overflow-hidden bg-white shadow-sm",children:[(0,s.jsxs)("div",{className:"px-6 py-4 border-b border-gray-200 bg-gray-50",children:[(0,s.jsx)("h3",{className:"text-xl font-semibold text-gray-900",children:c}),o&&(0,s.jsx)("p",{className:"mt-1 text-sm text-gray-600",children:o})]}),(0,s.jsx)("div",{className:"p-8 bg-gradient-to-br from-gray-50 to-white",children:(0,s.jsx)("div",{className:"flex items-center justify-center min-h-[200px]",children:n})}),(0,s.jsxs)("div",{className:"relative",children:[(0,s.jsx)("div",{className:"absolute top-3 right-3 z-10",children:(0,s.jsx)("button",{onClick:u,className:"flex items-center gap-2 px-3 py-1.5 bg-gray-700 hover:bg-gray-600 text-white text-sm rounded-md transition-colors",children:x?(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.A,{size:16}),"Скопировано!"]}):(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(d.A,{size:16}),"Копировать"]})})}),(0,s.jsx)(a.A,{language:"tsx",style:l.A,customStyle:{margin:0,borderRadius:0,fontSize:"14px",padding:"1.5rem"},children:t})]})]})}},34397:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>r});var s=t(95155),i=t(30171),a=t(12115);function l(e){let{initialValue:n=0,min:t,max:i,step:l=1}=e,[r,d]=(0,a.useState)(n),c="w-12 h-12 rounded-lg font-bold text-xl transition-all hover:scale-110 active:scale-95 disabled:opacity-50 disabled:cursor-not-allowed";return(0,s.jsxs)("div",{className:"flex items-center gap-4 bg-white p-4 rounded-xl shadow-md border border-gray-200",children:[(0,s.jsx)("button",{onClick:()=>{d(e=>{let n=e-l;return void 0!==t&&n<t?e:n})},disabled:void 0!==t&&r<=t,className:"".concat(c," ").concat("bg-red-500 hover:bg-red-600 text-white"),children:"−"}),(0,s.jsx)("div",{className:"text-3xl font-bold text-gray-900 min-w-[80px] text-center",children:r}),(0,s.jsx)("button",{onClick:()=>{d(e=>{let n=e+l;return void 0!==i&&n>i?e:n})},disabled:void 0!==i&&r>=i,className:"".concat(c," ").concat("bg-green-500 hover:bg-green-600 text-white"),children:"+"})]})}function r(){return(0,s.jsx)("div",{className:"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 py-12 px-4",children:(0,s.jsxs)("div",{className:"max-w-6xl mx-auto",children:[(0,s.jsxs)("div",{className:"mb-12 text-center",children:[(0,s.jsx)("h1",{className:"text-5xl font-bold text-gray-900 mb-4",children:"Counter (Счётчик)"}),(0,s.jsx)("p",{className:"text-xl text-gray-600 max-w-2xl mx-auto",children:"Учись работать с состоянием (useState) и создавать компоненты, которые реагируют на действия пользователя."})]}),(0,s.jsx)("div",{className:"mb-8",children:(0,s.jsx)(i.A,{title:"Базовый счётчик",description:"Простой счётчик без ограничений",code:"<Counter />",children:(0,s.jsx)(l,{})})}),(0,s.jsx)("div",{className:"mb-8",children:(0,s.jsx)(i.A,{title:"С начальным значением",description:"Счётчик начинается с указанного числа",code:"<Counter initialValue={10} />",children:(0,s.jsx)(l,{initialValue:10})})}),(0,s.jsx)("div",{className:"mb-8",children:(0,s.jsx)(i.A,{title:"С ограничениями (минимум и максимум)",description:"Счётчик не может выйти за указанные пределы",code:"<Counter \n  initialValue={5}\n  min={0}\n  max={10}\n/>",children:(0,s.jsx)(l,{initialValue:5,min:0,max:10})})}),(0,s.jsx)("div",{className:"mb-8",children:(0,s.jsx)(i.A,{title:"С шагом изменения",description:"Счётчик увеличивается/уменьшается на указанное число",code:"<Counter \n  initialValue={0}\n  step={5}\n/>",children:(0,s.jsx)(l,{initialValue:0,step:5})})}),(0,s.jsx)("div",{className:"mb-8",children:(0,s.jsx)(i.A,{title:"Практические примеры",description:"Где можно использовать счётчик?",code:'<div>\n  <p className="mb-2">Количество товаров:</p>\n  <Counter initialValue={1} min={1} max={99} />\n</div>\n\n<div>\n  <p className="mb-2">Возраст:</p>\n  <Counter initialValue={18} min={0} max={120} />\n</div>\n\n<div>\n  <p className="mb-2">Оценка (0-5):</p>\n  <Counter initialValue={3} min={0} max={5} />\n</div>',children:(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{className:"mb-6",children:[(0,s.jsx)("p",{className:"mb-2 text-gray-700 font-medium",children:"Количество товаров:"}),(0,s.jsx)(l,{initialValue:1,min:1,max:99})]}),(0,s.jsxs)("div",{className:"mb-6",children:[(0,s.jsx)("p",{className:"mb-2 text-gray-700 font-medium",children:"Возраст:"}),(0,s.jsx)(l,{initialValue:18,min:0,max:120})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("p",{className:"mb-2 text-gray-700 font-medium",children:"Оценка (0-5):"}),(0,s.jsx)(l,{initialValue:3,min:0,max:5})]})]})})}),(0,s.jsxs)("div",{className:"mb-8 p-8 bg-purple-50 border-l-4 border-purple-500 rounded-lg",children:[(0,s.jsx)("h3",{className:"text-2xl font-bold text-gray-900 mb-4 flex items-center gap-2",children:"Что такое useState?"}),(0,s.jsxs)("p",{className:"text-gray-700 mb-4",children:[(0,s.jsx)("code",{className:"bg-white px-2 py-1 rounded font-mono text-sm",children:"useState"}),' — это React хук, который позволяет компоненту "запоминать" данные.']}),(0,s.jsx)("div",{className:"bg-white p-4 rounded-lg mb-4",children:(0,s.jsx)("pre",{className:"text-sm overflow-x-auto",children:"const [count, setCount] = useState(0);\n       ↑       ↑              ↑\n    значение  функция    начальное\n              изменения  значение"})}),(0,s.jsxs)("div",{className:"space-y-3 text-gray-700",children:[(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{className:"text-gray-900",children:"count"})," — текущее значение (например, 5)"]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{className:"text-gray-900",children:"setCount"})," — функция для изменения значения"]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{className:"text-gray-900",children:"useState(0)"})," — начальное значение (0)"]})]}),(0,s.jsx)("div",{className:"mt-4 p-4 bg-purple-100 rounded-lg",children:(0,s.jsxs)("p",{className:"text-sm text-gray-800",children:[(0,s.jsx)("strong",{children:"Важно:"})," Когда вызываешь ",(0,s.jsx)("code",{className:"bg-white px-2 py-1 rounded",children:"setCount(10)"}),", React автоматически обновляет компонент с новым значением. Это магия React!"]})})]}),(0,s.jsxs)("div",{className:"mt-16 p-8 bg-white rounded-2xl shadow-lg border-2 border-blue-100",children:[(0,s.jsx)("h2",{className:"text-3xl font-bold text-gray-900 mb-6 flex items-center gap-3",children:"Как использовать?"}),(0,s.jsxs)("div",{className:"space-y-6",children:[(0,s.jsxs)("div",{className:"flex gap-4",children:[(0,s.jsx)("div",{className:"flex-shrink-0 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold",children:"1"}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h3",{className:"font-semibold text-lg mb-2",children:"Создай файл компонента"}),(0,s.jsxs)("p",{className:"text-gray-600 mb-2",children:["Создай файл ",(0,s.jsx)("code",{className:"bg-gray-100 px-2 py-1 rounded text-sm",children:"components/ui/Counter.tsx"})]}),(0,s.jsxs)("p",{className:"text-sm text-amber-600 flex items-center gap-1",children:["⚠️ Не забудь добавить ",(0,s.jsx)("code",{className:"bg-amber-100 px-2 py-1 rounded",children:"'use client'"})," в начале файла!"]})]})]}),(0,s.jsxs)("div",{className:"flex gap-4",children:[(0,s.jsx)("div",{className:"flex-shrink-0 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold",children:"2"}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h3",{className:"font-semibold text-lg mb-2",children:"Импортируй useState"}),(0,s.jsx)("pre",{className:"bg-gray-900 text-gray-100 p-3 rounded-lg text-sm overflow-x-auto mt-2",children:"'use client';\nimport { useState } from 'react';"})]})]}),(0,s.jsxs)("div",{className:"flex gap-4",children:[(0,s.jsx)("div",{className:"flex-shrink-0 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold",children:"3"}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h3",{className:"font-semibold text-lg mb-2",children:"Скопируй код"}),(0,s.jsx)("p",{className:"text-gray-600",children:"Скопируй весь код из блока ниже"})]})]}),(0,s.jsxs)("div",{className:"flex gap-4",children:[(0,s.jsx)("div",{className:"flex-shrink-0 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold",children:"4"}),(0,s.jsxs)("div",{children:[(0,s.jsx)("h3",{className:"font-semibold text-lg mb-2",children:"Используй в проекте"}),(0,s.jsx)("pre",{className:"bg-gray-900 text-gray-100 p-4 rounded-lg text-sm overflow-x-auto mt-2",children:"import Counter from '@/components/ui/Counter';\n\n<Counter \n  initialValue={0}\n  min={0}\n  max={100}\n  step={1}\n/>"})]})]})]})]}),(0,s.jsx)("div",{className:"mt-12",children:(0,s.jsx)(i.A,{title:"Полный код компонента Counter",description:"Скопируй весь этот код в файл components/ui/Counter.tsx",code:'\'use client\';\nimport { useState } from \'react\';\n\ninterface CounterProps {\n  initialValue?: number;\n  min?: number;\n  max?: number;\n  step?: number;\n}\n\nexport default function Counter({ \n  initialValue = 0,\n  min,\n  max,\n  step = 1\n}: CounterProps) {\n  \n  const [count, setCount] = useState(initialValue);\n\n  const styles = {\n    container: "flex items-center gap-4 bg-white p-4 rounded-xl shadow-md border border-gray-200",\n    button: "w-12 h-12 rounded-lg font-bold text-xl transition-all hover:scale-110 active:scale-95 disabled:opacity-50 disabled:cursor-not-allowed",\n    decreaseButton: "bg-red-500 hover:bg-red-600 text-white",\n    increaseButton: "bg-green-500 hover:bg-green-600 text-white",\n    display: "text-3xl font-bold text-gray-900 min-w-[80px] text-center",\n  };\n\n  const increment = () => {\n    setCount(prevCount => {\n      const newCount = prevCount + step;\n      if (max !== undefined && newCount > max) return prevCount;\n      return newCount;\n    });\n  };\n\n  const decrement = () => {\n    setCount(prevCount => {\n      const newCount = prevCount - step;\n      if (min !== undefined && newCount < min) return prevCount;\n      return newCount;\n    });\n  };\n\n  const isMinReached = min !== undefined && count <= min;\n  const isMaxReached = max !== undefined && count >= max;\n\n  return (\n    <div className={styles.container}>\n      <button\n        onClick={decrement}\n        disabled={isMinReached}\n        className={`${styles.button} ${styles.decreaseButton}`}\n      >\n        −\n      </button>\n\n      <div className={styles.display}>\n        {count}\n      </div>\n\n      <button\n        onClick={increment}\n        disabled={isMaxReached}\n        className={`${styles.button} ${styles.increaseButton}`}\n      >\n        +\n      </button>\n    </div>\n  );\n}',children:(0,s.jsx)("div",{className:"text-center text-gray-500 py-8",children:"⬇️ Прокрути вниз, чтобы увидеть полный код ⬇️"})})})]})})}}},e=>{e.O(0,[765,441,255,358],()=>e(e.s=7667)),_N_E=e.O()}]);