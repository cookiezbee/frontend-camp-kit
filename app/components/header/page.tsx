"use client";

import ComponentPreview from "@/components/showcase/ComponentPreview";
import Header from "@/components/ui/Header";
import Button from "@/components/ui/Button";

export default function HeaderPage() {
  const headerCode = `"use client";

import Link from "next/link";

interface HeaderProps {
  logo?: React.ReactNode;
  navigation?: { label: string; href: string }[];
  actions?: React.ReactNode;
}

export default function Header({ logo, navigation, actions }: HeaderProps) {
  return (
    <header className="bg-white border-b border-gray-200 shadow-sm">
      <div className="max-w-7xl mx-auto px-4 py-4">
        <div className="flex items-center justify-between gap-8">
          {/* –õ–æ–≥–æ—Ç–∏–ø */}
          <div className="flex items-center gap-2">
            {logo || (
              <div className="text-2xl font-bold text-blue-600">Logo</div>
            )}
          </div>

          {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
          {navigation && (
            <nav className="flex items-center gap-6">
              {navigation.map((item, index) => (
                <Link
                  key={index}
                  href={item.href}
                  className="text-gray-700 hover:text-blue-600 font-medium transition-colors"
                >
                  {item.label}
                </Link>
              ))}
            </nav>
          )}

          {/* –î–µ–π—Å—Ç–≤–∏—è (–∫–Ω–æ–ø–∫–∏, –∏–∫–æ–Ω–∫–∏) */}
          {actions && <div className="flex items-center gap-3 ml-auto">{actions}</div>}
        </div>
      </div>
    </header>
  );
}`;

  const navigation = [
    { label: "–ì–ª–∞–≤–Ω–∞—è", href: "/" },
    { label: "–û –Ω–∞—Å", href: "/" },
    { label: "–£—Å–ª—É–≥–∏", href: "/" },
    { label: "–ö–æ–Ω—Ç–∞–∫—Ç—ã", href: "/" },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 py-12 px-4">
      <div className="max-w-6xl mx-auto">
        <div className="mb-12 text-center">
          <h1 className="text-5xl font-bold text-gray-900 mb-4">
            Header (–®–∞–ø–∫–∞ —Å–∞–π—Ç–∞)
          </h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –ù–∞–≤–∏–≥–∞—Ü–∏—è, –ª–æ–≥–æ—Ç–∏–ø –∏ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Å–∞–π—Ç–∞
          </p>
        </div>

        {/* –ë–∞–∑–æ–≤–∞—è —à–∞–ø–∫–∞ */}
        <div className="mb-8">
          <ComponentPreview
            title="–ë–∞–∑–æ–≤–∞—è —à–∞–ø–∫–∞"
            description="–ü—Ä–æ—Å—Ç–∞—è —à–∞–ø–∫–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π"
            code={`const navigation = [
  { label: "–ì–ª–∞–≤–Ω–∞—è", href: "/" },
  { label: "–û –Ω–∞—Å", href: "/about" },
  { label: "–£—Å–ª—É–≥–∏", href: "/services" },
  { label: "–ö–æ–Ω—Ç–∞–∫—Ç—ã", href: "/contact" },
];

<Header navigation={navigation} />`}
          >
            <Header navigation={navigation} />
          </ComponentPreview>
        </div>

        {/* –° –∫–∞—Å—Ç–æ–º–Ω—ã–º –ª–æ–≥–æ—Ç–∏–ø–æ–º */}
        <div className="mb-8">
          <ComponentPreview
            title="–° –∫–∞—Å—Ç–æ–º–Ω—ã–º –ª–æ–≥–æ—Ç–∏–ø–æ–º"
            description="–î–æ–±–∞–≤—å —Å–≤–æ–π –ª–æ–≥–æ—Ç–∏–ø —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–æ–π"
            code={`<Header 
  logo={
    <div className="flex items-center gap-2">
      <div className="text-3xl">üöÄ</div>
      <span className="text-xl font-bold text-gray-900">MyApp</span>
    </div>
  }
  navigation={navigation}
/>`}
          >
            <Header
              logo={
                <div className="flex items-center gap-2">
                  <div className="text-3xl">üöÄ</div>
                  <span className="text-xl font-bold text-gray-900">MyApp</span>
                </div>
              }
              navigation={navigation}
            />
          </ComponentPreview>
        </div>

        {/* –° –∫–Ω–æ–ø–∫–∞–º–∏ */}
        <div className="mb-8">
          <ComponentPreview
            title="–° –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π"
            description="–î–æ–±–∞–≤—å –∫–Ω–æ–ø–∫–∏ –í–æ–π—Ç–∏/–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
            code={`<Header 
  navigation={navigation}
  actions={
    <>
      <Button variant="secondary" size="sm">
        –í–æ–π—Ç–∏
      </Button>
      <Button variant="primary" size="sm">
        –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
      </Button>
    </>
  }
/>`}
          >
            <Header
              navigation={navigation}
              actions={
                <>
                  <Button variant="secondary" size="sm">
                    –í–æ–π—Ç–∏
                  </Button>
                  <Button variant="primary" size="sm">
                    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                  </Button>
                </>
              }
            />
          </ComponentPreview>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
        <div className="mt-16 p-8 bg-white rounded-2xl shadow-lg border-2 border-blue-100">
          <h2 className="text-3xl font-bold text-gray-900 mb-6">
            –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Å–≤–æ–µ–º –ø—Ä–æ–µ–∫—Ç–µ?
          </h2>

          <div className="space-y-6">
            <div className="flex gap-4">
              <div className="flex-shrink-0 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold">
                1
              </div>
              <div>
                <h3 className="font-semibold text-lg mb-2">
                  –°–æ–∑–¥–∞–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Header
                </h3>
                <p className="text-gray-600">
                  –°–æ–∑–¥–∞–π{" "}
                  <code className="bg-gray-100 px-2 py-1 rounded text-sm">
                    components/ui/Header.tsx
                  </code>
                </p>
              </div>
            </div>

            <div className="flex gap-4">
              <div className="flex-shrink-0 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold">
                2
              </div>
              <div>
                <h3 className="font-semibold text-lg mb-2">
                  –î–æ–±–∞–≤—å –≤ layout.tsx
                </h3>
                <p className="text-gray-600 mb-2">
                  –î–æ–±–∞–≤—å Header –≤ –≥–ª–∞–≤–Ω—ã–π layout, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
                </p>
                <pre className="bg-gray-900 text-gray-100 p-4 rounded-lg text-sm overflow-x-auto mt-2">
                  {`import Header from '@/components/ui/Header';

export default function RootLayout({ children }) {
  const navigation = [
    { label: "–ì–ª–∞–≤–Ω–∞—è", href: "/" },
    { label: "–û –Ω–∞—Å", href: "/about" },
  ];

  return (
    <html>
      <body>
        <Header navigation={navigation} />
        {children}
      </body>
    </html>
  );
}`}
                </pre>
              </div>
            </div>

            <div className="flex gap-4">
              <div className="flex-shrink-0 w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold">
                3
              </div>
              <div>
                <h3 className="font-semibold text-lg mb-2">
                  –ù–∞—Å—Ç—Ä–æ–π –ø–æ–¥ —Å–µ–±—è!
                </h3>
                <p className="text-gray-600 mb-3">
                  –ò–∑–º–µ–Ω–∏ —Ü–≤–µ—Ç–∞ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ Header:
                </p>
                <pre className="bg-gray-900 text-gray-100 p-4 rounded-lg text-sm overflow-x-auto">
                  {`// –§–æ–Ω —à–∞–ø–∫–∏:
bg-white         ‚Üí    bg-blue-500

// –¶–≤–µ—Ç —Å—Å—ã–ª–æ–∫:
text-gray-700    ‚Üí    text-white

// –ë–æ—Ä–¥–µ—Ä:
border-gray-200  ‚Üí    border-blue-600`}
                </pre>
              </div>
            </div>
          </div>
        </div>

        {/* –ü–æ–ª–Ω—ã–π –∫–æ–¥ */}
        <div className="mt-12">
          <ComponentPreview
            title="–ü–æ–ª–Ω—ã–π –∫–æ–¥ Header"
            description="–°–∫–æ–ø–∏—Ä—É–π –≤ components/ui/Header.tsx"
            code={headerCode}
          >
            <div className="text-center text-gray-500 py-8">
              ‚¨áÔ∏è –ü—Ä–æ–∫—Ä—É—Ç–∏ –≤–Ω–∏–∑ ‚¨áÔ∏è
            </div>
          </ComponentPreview>
        </div>
      </div>
    </div>
  );
}
