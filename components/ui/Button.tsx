// ============================================
// –ö–û–ú–ü–û–ù–ï–ù–¢: –ö–ù–û–ü–ö–ê (Button)
// ============================================
// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏
// ============================================

interface ButtonProps {
  children: React.ReactNode; // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
  variant?: "primary" | "secondary" | "danger"; // –°—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏
  size?: "sm" | "md" | "lg"; // –†–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏
  onClick?: () => void; // –ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –∫–ª–∏–∫–µ
  disabled?: boolean; // –ù–µ–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞?
}

export default function Button({
  children,
  variant = "primary", // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é primary
  size = "md", // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä
  onClick,
  disabled = false,
}: ButtonProps) {
  // ============================================
  // –ù–ê–°–¢–†–û–ô –¶–í–ï–¢–ê –ü–û–î –°–í–û–ô –î–ò–ó–ê–ô–ù!
  // ============================================
  const colors = {
    primary: "bg-blue-500 hover:bg-blue-600 text-white",
    // üí° –•–æ—á–µ—à—å –∑–µ–ª–µ–Ω—É—é? –ó–∞–º–µ–Ω–∏ blue –Ω–∞ green

    secondary: "bg-gray-200 hover:bg-gray-300 text-gray-800",
    // üí° –ú–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Å–µ—Ä–æ–π: bg-slate-200

    danger: "bg-red-500 hover:bg-red-600 text-white",
    // üí° –ò–ª–∏ –æ—Ä–∞–Ω–∂–µ–≤–æ–π: bg-orange-500
  };

  // ============================================
  // –ù–ê–°–¢–†–û–ô –†–ê–ó–ú–ï–†–´
  // ============================================
  const sizes = {
    sm: "px-3 py-1.5 text-sm", // –ú–∞–ª–µ–Ω—å–∫–∞—è
    md: "px-5 py-2.5 text-base", // –°—Ä–µ–¥–Ω—è—è
    lg: "px-6 py-3 text-lg", // –ë–æ–ª—å—à–∞—è
  };

  // ============================================
  // –ë–ê–ó–û–í–´–ï –°–¢–ò–õ–ò
  // ============================================
  const baseStyles =
    "font-medium rounded-lg transition-all duration-200 shadow-sm hover:shadow-md";

  // –°—Ç–∏–ª—å –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
  const disabledStyles = disabled
    ? "opacity-50 cursor-not-allowed hover:scale-100"
    : "hover:scale-105 active:scale-95";

  return (
    <button
      className={`${baseStyles} ${colors[variant]} ${sizes[size]} ${disabledStyles}`}
      onClick={onClick}
      disabled={disabled}
    >
      {children}
    </button>
  );
}

// ============================================
// –ö–ê–ö –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨?
// ============================================
//
// 1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç:
//    import Button from '@/components/ui/Button';
//
// 2. –ò—Å–ø–æ–ª—å–∑—É–π –≤ —Å–≤–æ–µ–º –∫–æ–¥–µ:
//    <Button variant="primary" size="md">
//      –ù–∞–∂–º–∏ –º–µ–Ω—è!
//    </Button>
//
// 3. –í–∞—Ä–∏–∞–Ω—Ç—ã:
//    <Button variant="primary">–°–∏–Ω—è—è –∫–Ω–æ–ø–∫–∞</Button>
//    <Button variant="secondary">–°–µ—Ä–∞—è –∫–Ω–æ–ø–∫–∞</Button>
//    <Button variant="danger">–ö—Ä–∞—Å–Ω–∞—è –∫–Ω–æ–ø–∫–∞</Button>
//
// 4. –†–∞–∑–º–µ—Ä—ã:
//    <Button size="sm">–ú–∞–ª–µ–Ω—å–∫–∞—è</Button>
//    <Button size="md">–°—Ä–µ–¥–Ω—è—è</Button>
//    <Button size="lg">–ë–æ–ª—å—à–∞—è</Button>
//
// 5. –° –¥–µ–π—Å—Ç–≤–∏–µ–º:
//    <Button onClick={() => alert('–ü—Ä–∏–≤–µ—Ç!')}>
//      –ù–∞–∂–º–∏ –º–µ–Ω—è
//    </Button>
//
// 6. –ù–µ–∞–∫—Ç–∏–≤–Ω–∞—è:
//    <Button disabled>–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</Button>
//
// ============================================
